pipeline {
    agent any
   environment {
        // Define environment variables here
        MY_VARIABLE = "Hello, Jenkins!"
        SONAR_TOKEN = credentials('sqa_05fd54c9b7b357c243e5aec1d566b8fd1c6c14a6')
    }
    triggers {
        // With this cron expression, the pipeline will be triggered at 12 AM (midnight) on the first day of every month.
        cron('0 0 1 * *')
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checkout'
                echo "My variable value: ${env.MY_VARIABLE}" 
            }
        }
        stage('Build') {
            steps {
                // Building project using Maven on Windows.
                bat 'mvn clean package'
            }
        }
        stage('SonarQube Analysis') {
            when {
                expression { return env.SONAR_TOKEN != null }
            }
            steps {
                // Executing SonarQube Scanner using Maven with the provided access token
                bat "mvn sonar:sonar -Dsonar.login=${env.SONAR_TOKEN}"
            }
        }

        stage('Unit Testing') {
            when {
                not {
                    expression {
                        return currentBuild.result == null || currentBuild.result == 'SUCCESS'
                    }
                }
            }
            steps {
                echo 'Running tests...'
                // Run the Maven test goal
                bat 'mvn clean test'
            }
        }

        stage('JFrog Deployment') {
            when {
                not {
                    expression {
                        return currentBuild.result == null || currentBuild.result == 'SUCCESS'
                    }
                }
            }
            steps {
                // Deploy the Maven artifact to Artifactory using rtMavenDeployer
                rtMavenDeployer(
                    id: 'deployer',
                    serverId: 'nagp_artifactory_pipeline',
                    releaseRepo: 'your-release-repo',
                    snapshotRepo: 'your-snapshot-repo'
                )
                
                // Run additional Maven goals using rtMavenRun
                rtMavenRun(
                    pom: 'pom.xml',
                    goals: 'clean install',
                    deployerId: 'deployer'
                )
                
                // Publish build info to Artifactory
                rtPublishBuildInfo(serverId: 'nagp_artifactory_pipeline')
            }
        }
    }

    post {
        always {
            // Add your email notification step here.
            // For example, using the built-in 'emailext' plugin:
            emailext body: 'The Jenkins pipeline has finished!',
                     recipientProviders: [[$class: 'CulpritsRecipientProvider']],
                     subject: "Jenkins Pipeline Status - ${currentBuild.currentResult}",
                     to: 'khandelwal.krishna15@gmail.com'
        }
    }
}
