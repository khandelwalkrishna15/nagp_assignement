pipeline {
    agent any
    parameters {
        string(name: 'SONAR_PROJECT_KEY', defaultValue: '', description: 'SonarQube project key')
    }
    triggers {
        // With this cron expression, the pipeline will be triggered at 12 AM (midnight) on the first day of every month.
        cron('0 0 1 * *')
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checkout'
            }
        }
        stage('Build') {
            steps {
                // Building project using Maven on Windows.
                bat 'mvn clean package'
            }
        }
        stage('SonarQube Analysis') {
            when {
                expression { return params.SONAR_PROJECT_KEY != '' }
            }
            steps {
                // Executing SonarQube Scanner using Maven with the provided project key
                bat "mvn sonar:sonar -Dsonar.login=${params.SONAR_PROJECT_KEY}"
            }
        }

        stage('Testing') {
            when {
                   not{
                   		expression {
                        return currentBuild.result == 'SUCCESS'
                    }
                   } 
            }
            steps {
                echo 'Running tests...'
                // Run the Maven test goal
                bat 'mvn clean test'
            }
        }

        stage('JFrog Deployment') {
            when {
                   not{
                   		expression {
                        return currentBuild.result == 'SUCCESS'
                    }
                   } 
            }
            steps {
               script {
                    // Set up Maven with the desired Maven installation
                    def mvnHome = tool name: 'Maven 3', type: 'maven'

                    // Deploy the Maven artifact to Artifactory using rtMavenDeployer
                    def rtServer = Artifactory.server 'nagp_artifactory'
                    def rtMaven = Artifactory.newMavenBuild()

                    rtMaven.deployer releaseRepo: 'example-repo-local', snapshotRepo: 'example-repo-local', server: rtServer
                    rtMaven.resolver releaseRepo: 'example-repo-local', snapshotRepo: 'example-repo-local', server: rtServer

                    // Run Maven goals using rtMavenRun
                    rtMaven.run pom: 'pom.xml', goals: 'clean install', mavenOpts: '-Xmx1g', javaOpts: '-Xmx1g', executable: mvnHome

                    // Publish build info to Artifactory
                    rtMaven.deployer.deployArtifacts buildInfo: rtMaven.buildInfo
                }
            }
        }
    }

    post {
        always {

            emailext body: 'The Jenkins pipeline has finished!',
                     recipientProviders: [[$class: 'CulpritsRecipientProvider']],
                     subject: "Jenkins Pipeline Status - ${currentBuild.currentResult}",
                     to: 'khandelwal.krishna15@gmail.com'
        }
    }
}
