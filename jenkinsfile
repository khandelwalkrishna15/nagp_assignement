pipeline {
    agent any
    
    environment {
        MAVEN_HOME = tool name: 'Maven3', type: 'maven'
        PATH = "${MAVEN_HOME}/bin:${env.PATH};C:\\Windows\\System32"
    }

    parameters {
        string(name: 'SONAR_PROJECT_KEY', defaultValue: '', description: 'SonarQube project key')
    }

    triggers {
        // With this cron expression, the pipeline will be triggered at 12 AM (midnight) on the first day of every month.
        cron('0 0 1 * *')
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checkout'
            }
        }

        stage('Build') {
            steps {
                // Building project using Maven on Windows.
                bat 'mvn clean package'
            }
        }

        stage('SonarQube Analysis') {
            when {
                expression { return params.SONAR_PROJECT_KEY != '' }
            }
            steps {
                // Executing SonarQube Scanner using Maven with the provided project key
                bat "mvn sonar:sonar -Dsonar.login=${params.SONAR_PROJECT_KEY}"
            }
        }

        stage('Testing') {
            when {
                not {
                    expression {
                        return currentBuild.result == 'SUCCESS'
                    }
                } 
            }
            steps {
                echo 'Running tests...'
                // Run the Maven test goal
                bat 'mvn clean test'
            }
        }

        stage('JFrog Deployment') {
            when {
                not {
                    expression {
                        return currentBuild.result == 'SUCCESS'
                    }
                } 
            }
            steps {
                // Run additional Maven goals using rtMavenRun
               

                // Deploy the Maven artifact to Artifactory using rtMavenDeployer
                rtMavenDeployer(
                    id: 'deployer',
                    serverId: 'nagp_artifactory',
                    releaseRepo: 'example-repo-local',
                    snapshotRepo: 'example-repo-local',
                    
                )
                 rtMavenRun(
                    pom: 'pom.xml',
                    goals: 'clean install',
                    deployerId: 'deployer'
                )

                // Publish build info to Artifactory
                rtPublishBuildInfo(serverId: 'nagp_artifactory')
            }
        }
    }

    post {
        always {
            emailext body: 'The Jenkins pipeline has finished!',
                     recipientProviders: [[$class: 'CulpritsRecipientProvider']],
                     subject: "Jenkins Pipeline Status - ${currentBuild.currentResult}",
                     to: 'khandelwal.krishna15@gmail.com'
        }
    }
}
